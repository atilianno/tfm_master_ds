#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos.csv', sep=','))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
str(df)
View(df)
print(str(df))
View(df)
df_summary <- str(df, vec.len = 2)
library(dplyr)
library(factoextra)
library(ggplot2)
library(cluster)
library(tidyverse)
library(ggcorrplot)
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos.csv', sep=','))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
df_seitan <- df_seitan[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
df_seitan$FAT_100G <- as.numeric(df_seitan$FAT_100G)
df_seitan$CARBOHYDRATES_100G <- as.numeric(df_seitan$CARBOHYDRATES_100G)
df_seitan$SUGARS_100G <- as.numeric(df_seitan$SUGARS_100G)
df_seitan$PROTEINS_100G <- as.numeric(df_seitan$PROTEINS_100G)
summary(df_seitan)
#Elimino los faltantes
df_seitan <- df_seitan[complete.cases(df_seitan), ]
#reemplazo por la mediana los faltantes
# df_seitan <- df_seitan %>%
#   group_by(CREATOR) %>%
#   mutate(FAT_100G = ifelse(is.na(FAT_100G), median(FAT_100G, na.rm = TRUE), FAT_100G),
#          CARBOHYDRATES_100G = ifelse(is.na(CARBOHYDRATES_100G), median(CARBOHYDRATES_100G, na.rm = TRUE), CARBOHYDRATES_100G),
#          SUGARS_100G = ifelse(is.na(SUGARS_100G), median(SUGARS_100G, na.rm = TRUE), SUGARS_100G),
#          PROTEINS_100G = ifelse(is.na(PROTEINS_100G), median(PROTEINS_100G, na.rm = TRUE), PROTEINS_100G)
#          )
# summary(df_seitan)
#
# df_seitan <- df_seitan %>%
#   mutate(FAT_100G = ifelse(is.na(FAT_100G), median(df_seitan$FAT_100G, na.rm = TRUE), FAT_100G),
#          CARBOHYDRATES_100G = ifelse(is.na(CARBOHYDRATES_100G), median(df_seitan$CARBOHYDRATES_100G, na.rm = TRUE), CARBOHYDRATES_100G),
#          SUGARS_100G = ifelse(is.na(SUGARS_100G), median(df_seitan$SUGARS_100G, na.rm = TRUE), SUGARS_100G),
#          PROTEINS_100G = ifelse(is.na(PROTEINS_100G), median(df_seitan$PROTEINS_100G, na.rm = TRUE), PROTEINS_100G)
#   )
# summary(df_seitan)
df_seitan <- na.omit(df_seitan)
df_seitan$CREATOR_PRODNAME <- paste(df_seitan$CREATOR,'--', df_seitan$PRODUCT_NAME)
df_seitan <- df_seitan[,3:7]
df_seitan <- subset(df_seitan, !duplicated(CREATOR_PRODNAME))
df_seitan <- data.frame(
row.names = paste(df_seitan$CREATOR_PRODNAME),
df_seitan[, c("FAT_100G", "CARBOHYDRATES_100G", "SUGARS_100G", "PROTEINS_100G")]
)
df_seitan <- scale(df_seitan)
# total de cluster óptimos
elbow <- fviz_nbclust(x = df_seitan, kmeans, method = "wss")
print(elbow)
set.seed(123)
km_clusters <- kmeans(x=df_seitan,centers=6,nstart=25)
fviz_cluster(object=km_clusters,data=df_seitan,show.clust.cent = TRUE,
ellipse.type="euclid",star.plot=TRUE,repel=TRUE) +
labs(title ="Resultados clustering K-means") +
theme_bw() +
theme(legend.position = "none")
datos<-scale(df_seitan)
set.seed(101)
heculidea <- hclust(d = dist(x = datos, method = "euclidean"),
method = "complete")
fviz_dend(x=heculidea,cex=0.5,main = "Linkage completo",
sub="Distancia euclídea")+
theme(plot.title = element_text(hjust=0.5,size=15))
df_tofu <- subset(df, grepl("tofu", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "tofu"
df_tofu <- df_tofu[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
df_tofu$FAT_100G <- as.numeric(df_tofu$FAT_100G)
df_tofu$CARBOHYDRATES_100G <- as.numeric(df_tofu$CARBOHYDRATES_100G)
df_tofu$SUGARS_100G <- as.numeric(df_tofu$SUGARS_100G)
df_tofu$PROTEINS_100G <- as.numeric(df_tofu$PROTEINS_100G)
summary(df_tofu)
df_tofu <- subset(df, grepl("tofu", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "tofu"
df_tofu <- df_tofu[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
df_tofu$FAT_100G <- as.numeric(df_tofu$FAT_100G)
df_tofu$CARBOHYDRATES_100G <- as.numeric(df_tofu$CARBOHYDRATES_100G)
df_tofu$SUGARS_100G <- as.numeric(df_tofu$SUGARS_100G)
df_tofu$PROTEINS_100G <- as.numeric(df_tofu$PROTEINS_100G)
summary(df_tofu)
#reemplazo por la mediana los faltantes
# df_tofu <- df_tofu %>%
#   group_by(CREATOR) %>%
#   mutate(FAT_100G = ifelse(is.na(FAT_100G), median(FAT_100G, na.rm = TRUE), FAT_100G),
#          CARBOHYDRATES_100G = ifelse(is.na(CARBOHYDRATES_100G), median(CARBOHYDRATES_100G, na.rm = TRUE), CARBOHYDRATES_100G),
#          SUGARS_100G = ifelse(is.na(SUGARS_100G), median(SUGARS_100G, na.rm = TRUE), SUGARS_100G),
#          PROTEINS_100G = ifelse(is.na(PROTEINS_100G), median(PROTEINS_100G, na.rm = TRUE), PROTEINS_100G)
#          )
# summary(df_tofu)
#
# df_tofu <- df_tofu %>%
#   mutate(FAT_100G = ifelse(is.na(FAT_100G), median(df_tofu$FAT_100G, na.rm = TRUE), FAT_100G),
#          CARBOHYDRATES_100G = ifelse(is.na(CARBOHYDRATES_100G), median(df_tofu$CARBOHYDRATES_100G, na.rm = TRUE), CARBOHYDRATES_100G),
#          SUGARS_100G = ifelse(is.na(SUGARS_100G), median(df_tofu$SUGARS_100G, na.rm = TRUE), SUGARS_100G),
#          PROTEINS_100G = ifelse(is.na(PROTEINS_100G), median(df_tofu$PROTEINS_100G, na.rm = TRUE), PROTEINS_100G)
#   )
# summary(df_tofu)
#Elimino los faltantes
df_tofu <- df_tofu[complete.cases(df_tofu), ]
hist(df_tofu$FAT_100G, main = "Histograma de frecuencias FAT_100G", # Frecuencia
ylab = "Frecuencia")
hist(df_tofu$CARBOHYDRATES_100G, main = "Histograma de frecuencias CARBOHYDRATES_100G", # Frecuencia
ylab = "Frecuencia")
hist(df_tofu$SUGARS_100G, main = "Histograma de frecuencias SUGARS_100G", # Frecuencia
ylab = "Frecuencia")
hist(df_tofu$PROTEINS_100G, main = "Histograma de frecuencias PROTEINS_100G", # Frecuencia
ylab = "Frecuencia")
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos(18JUN23).csv', sep=','))
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos (18JUN23).csv', sep=','))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos (18JUN23).csv', sep=','))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
View(df_seitan)
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
columnas_numericas <- sapply(df_seitan, is.numeric)
df_seitan <- df_seitan[, columnas_numericas]
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos (18JUN23).csv', sep=','))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
columnas_numericas <- sapply(df_seitan, is.numeric)
df_seitan1 <- df_seitan[, columnas_numericas]
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
num_cols <- unlist(lapply(df_seitan, is.numeric))         # Identify numeric columns
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
num_cols <- unlist(lapply(df_seitan, is.numeric))         # Identify numeric columns
data_num <- data[ , num_cols]                        # Subset numeric columns of data
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
num_cols <- unlist(lapply(df_seitan, is.numeric))         # Identify numeric columns
data_num <- df_seitan[ , num_cols]                        # Subset numeric columns of data
df_seitan
# Filtrar columnas numéricas
df_filtrado <- select_if(df_seitan, is.numeric)
View(df_seitan)
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
df_seitan <- df_seitan[,-c('PRODUCT_NAME', 'INGREDIENTS_TEXT', 'INGREDIENTS_TAGS', 'ECOSCORE_GRADE', 'ECOSCORE_SCORE', 'NUTRISCORE_GRADE', 'NUTRISCORE_SCORE', 'FOOD_GROUPS_EN', 'ADDITIVES_EN', 'TRACES_EN', 'ALLERGENS')
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
df_seitan <- df_seitan[ ,-c('PRODUCT_NAME', 'INGREDIENTS_TEXT', 'INGREDIENTS_TAGS', 'ECOSCORE_GRADE', 'ECOSCORE_SCORE', 'NUTRISCORE_GRADE', 'NUTRISCORE_SCORE', 'FOOD_GROUPS_EN', 'ADDITIVES_EN', 'TRACES_EN', 'ALLERGENS')]
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
df_seitan <- df_seitan[ ,-c('INGREDIENTS_TEXT', 'INGREDIENTS_TAGS', 'ECOSCORE_GRADE', 'ECOSCORE_SCORE', 'NUTRISCORE_GRADE', 'NUTRISCORE_SCORE', 'FOOD_GROUPS_EN', 'ADDITIVES_EN', 'TRACES_EN', 'ALLERGENS')]
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
df_seitan1 <- df_seitan[ ,-c('INGREDIENTS_TEXT', 'INGREDIENTS_TAGS', 'ECOSCORE_GRADE', 'ECOSCORE_SCORE', 'NUTRISCORE_GRADE', 'NUTRISCORE_SCORE', 'FOOD_GROUPS_EN', 'ADDITIVES_EN', 'TRACES_EN', 'ALLERGENS')]
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
# Eliminar columnas
columnas_eliminar <- c('INGREDIENTS_TEXT', 'INGREDIENTS_TAGS', 'ECOSCORE_GRADE', 'ECOSCORE_SCORE', 'NUTRISCORE_GRADE', 'NUTRISCORE_SCORE', 'FOOD_GROUPS_EN', 'ADDITIVES_EN', 'TRACES_EN', 'ALLERGENS')
df_filtrado <- select(df_seitan, -one_of(columnas_eliminar))
View(df_filtrado)
#df_seitan <- df_seitan[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
#df_seitan$FAT_100G <- as.numeric(df_seitan$FAT_100G)
#df_seitan$CARBOHYDRATES_100G <- as.numeric(df_seitan$CARBOHYDRATES_100G)
#df_seitan$SUGARS_100G <- as.numeric(df_seitan$SUGARS_100G)
#df_seitan$PROTEINS_100G <- as.numeric(df_seitan$PROTEINS_100G)
summary(df_seitan)
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos (18JUN23).csv', sep=',',dec='.'))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos (18JUN23).csv', sep=',',dec='.'))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
# Eliminar columnas
columnas_eliminar <- c('INGREDIENTS_TEXT', 'INGREDIENTS_TAGS', 'ECOSCORE_GRADE', 'ECOSCORE_SCORE', 'NUTRISCORE_GRADE', 'NUTRISCORE_SCORE', 'FOOD_GROUPS_EN', 'ADDITIVES_EN', 'TRACES_EN', 'ALLERGENS')
df_filtrado <- select(df_seitan, -one_of(columnas_eliminar))
#df_seitan <- df_seitan[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
#df_seitan$FAT_100G <- as.numeric(df_seitan$FAT_100G)
#df_seitan$CARBOHYDRATES_100G <- as.numeric(df_seitan$CARBOHYDRATES_100G)
#df_seitan$SUGARS_100G <- as.numeric(df_seitan$SUGARS_100G)
#df_seitan$PROTEINS_100G <- as.numeric(df_seitan$PROTEINS_100G)
summary(df_seitan)
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
# Eliminar columnas
df_filtrado <- df_seitan %>%
select(PRODUCT_NAME, where(is.numeric))
View(df_filtrado)
View(df_filtrado)
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
# Eliminar columnas
df_seitan <- df_seitan %>%
select(PRODUCT_NAME, where(is.numeric))
#df_seitan <- df_seitan[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
#df_seitan$FAT_100G <- as.numeric(df_seitan$FAT_100G)
#df_seitan$CARBOHYDRATES_100G <- as.numeric(df_seitan$CARBOHYDRATES_100G)
#df_seitan$SUGARS_100G <- as.numeric(df_seitan$SUGARS_100G)
#df_seitan$PROTEINS_100G <- as.numeric(df_seitan$PROTEINS_100G)
summary(df_seitan)
#Elimino los faltantes
df_seitan <- df_seitan[complete.cases(df_seitan), ]
View(df_seitan)
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
# Eliminar columnas
df_seitan <- df %>%
select(PRODUCT_NAME, where(is.numeric)) %>%
summarize(across(where(is.numeric), sum)) %>%
select_if(function(col) sum(col) > 0) %>%
left_join(df, by = "product_name")
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas
# Eliminar columnas
df_seitan <- df %>%
select(PRODUCT_NAME, where(is.numeric)) %>%
summarize(across(where(is.numeric), sum)) %>%
select_if(function(col) sum(col) > 0) %>%
left_join(df, by = "PRODUCT_NAME")
#cargamos los datos con las variables que nos interesan
df = data.frame(read.csv2('C:/Users/linfante/OneDrive/Documentos/MasterBigData/TFM/tfm_master_ds/ProyectoVeganos/alimentos (18JUN23).csv', sep=',',dec='.'))
#Revisar que hay muchos productos que no son soja texturizada
df_soja <- subset(df, grepl("soja", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "soja"
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas cuya suma es mayor a 0 manteniendo "product_name"
df_filtrado <- df_seitan %>%
filter(rowSums(select(., where(is.numeric))) > 0) %>%
select(PRODUCT_NAME, where(is.numeric))
#df_seitan <- na.omit(df_seitan)
#df_seitan$CREATOR_PRODNAME <- paste(df_seitan$CREATOR,'--', df_seitan$PRODUCT_NAME)
#df_seitan <- df_seitan[,3:7]
#df_seitan <- subset(df_seitan, !duplicated(CREATOR_PRODNAME))
df_seitan <- data.frame(
row.names = paste(df_seitan$PRODUCT_NAME),
df_seitan[, -C('PRODUCT_NAME')]
)
df_seitan <- subset(df, grepl("seitan", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "seitan"
# Filtrar columnas numéricas cuya suma es mayor a 0 manteniendo "product_name"
df_seitan <- df_seitan %>%
filter(rowSums(select(., where(is.numeric))) > 0) %>%
select(PRODUCT_NAME, where(is.numeric))
#df_seitan <- na.omit(df_seitan)
#df_seitan$CREATOR_PRODNAME <- paste(df_seitan$CREATOR,'--', df_seitan$PRODUCT_NAME)
#df_seitan <- df_seitan[,3:7]
#df_seitan <- subset(df_seitan, !duplicated(CREATOR_PRODNAME))
df_seitan <- data.frame(
row.names = paste(df_seitan$PRODUCT_NAME),
df_seitan[, -C('PRODUCT_NAME')]
)
df_tofu <- subset(df, grepl("tofu", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "tofu"
df_tofu <- df_tofu[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
View(df)
df_tofu <- subset(df, grepl("tofu", PRODUCT_NAME, ignore.case = TRUE)) ## Registros que contienen la palabra "tofu"
df_tofu <- df_tofu[,c('CREATOR','PRODUCT_NAME','FAT_100G','CARBOHYDRATES_100G','SUGARS_100G','PROTEINS_100G')]
